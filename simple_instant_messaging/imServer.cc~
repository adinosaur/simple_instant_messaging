#include "imServer.h"
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>
#include <strings.h>
#include <iostream>

using namespace std;

TcpServer::TcpServer(int port):_port(port) {
    _listen_fd = socket(AF_INET, SOCK_STREAM, 0);
}

TcpServer::~TcpServer() {
    close(_listen_fd);
}

void TcpServer::bind_and_listen() {
    _bind();
    _listen();
}

void TcpServer::_bind() {
    struct sockaddr_in saddr;
    bzero(&saddr, sizeof(saddr));
    saddr.sin_port = htons(port);
    saddr.sin_family = AF_INET;
    if (bind(_listen_fd, (struct sockaddr*)&saddr, sizeof(saddr)) != 0)
        cerr << "bind error" << endl;
}

void TcpServer::_listen() {
    if (listen(_listen_fd, 1) != 0)
        cerr << "listen error" << endl;
}

void TcpServer::run() {
    struct sockaddr_in saddr;
    socklen_t len = sizeof(saddr);
    
    while (1) {
        int confd = accept(sockfd, (struct sockaddr*)&saddr, &len);
        do_handle(confd);
        close(confd);
    }
}
